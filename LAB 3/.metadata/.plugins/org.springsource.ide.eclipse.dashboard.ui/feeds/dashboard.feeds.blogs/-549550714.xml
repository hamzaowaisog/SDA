<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 09 Feb 2023 02:10:24 GMT</lastBuildDate><item><title><![CDATA[This Week in Spring - February 7th, 2023]]></title><link>https://spring.io/blog/2023/02/07/this-week-in-spring-february-7th-2023</link><guid isPermaLink="true">https://spring.io/blog/2023/02/07/this-week-in-spring-february-7th-2023</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Tue, 07 Feb 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! It&apos;s Tuesday, February 7th, 2023, as I write this and I&apos;m so very glad to be talking to you. How&apos;re you doin&apos;?&lt;/p&gt;
&lt;p&gt;Some housekeeping: I&apos;ll be doing more &lt;a href=&quot;https://youtube.com/@coffeesoftware&quot;&gt;live streams over on my YT channel&lt;/a&gt; - join me and we&apos;ll talk shop.&lt;/p&gt;
&lt;p&gt;I&apos;m going to be in Chicago, IL, next week, and am wondering about doing an in-person livestream folks while I&apos;m there? Anybody wanna meet at a café or something for a little code and coffee? &lt;a href=&quot;https://twitter.com/starbuxman&quot;&gt;Hit me up&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Anyway, my friends, let&apos;s get on with this week&apos;s roundup:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/02/02/a-bootiful-podcast-moderne-founder-jon-schneider-on-openrewrite-modernizing&quot;&gt;A Bootiful Podcast: Moderne founder Jon Schneider on OpenRewrite, modernizing code bases en masse, freedom and responsibility, and more&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tanzu.vmware.com/content/blog/state-of-spring-2023-team-analysis&quot;&gt;Analyzing the State of Spring Report with the Spring Engineering Team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/geekculture/dynamite-duo-gwt-boot-and-spring-boot-e5a966782344&quot;&gt;Dynamite Duo: GWT Boot and Spring Boot  by Dr. Lofi Dewanto  &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@malvin.lok/how-to-retry-third-party-api-elegantly-in-spring-boot-9c1f8a4ce969&quot;&gt;How To retry Third-party API Elegantly in Spring Boot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://amirmv2006.medium.com/spring-initializr-and-continuous-generation-3d9516865763&quot;&gt;Spring Initializr and Continuous Generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/02/01/spring-tools-4-17-2-released&quot;&gt;Spring Tools 4.17.2 released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tanzu.vmware.com/content/blog/springone-essentials-2023-sessions-recap&quot;&gt;SpringOne State of Mind: Josh Long’s Musings from SpringOne Essentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/02/03/the-state-of-spring-survey-2022-report&quot;&gt;The 2022 State of Spring Survey Report&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://springbootlearning.medium.com/using-micrometer-to-trace-your-spring-data-jpa-application-aab5c6449900&quot;&gt;Using Micrometer to trace your Spring Data JPA application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/726580769/0/baeldung~Using-and-Testing-Axon-applications-via-REST&quot;&gt;Using and Testing Axon applications via REST&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[An ever green, ever great way to learn Spring]]></title><link>https://spring.io/blog/2023/02/03/an-ever-green-ever-great-way-to-learn-spring</link><guid isPermaLink="true">https://spring.io/blog/2023/02/03/an-ever-green-ever-great-way-to-learn-spring</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Fri, 03 Feb 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I could &lt;em&gt;do&lt;/em&gt; this post every week. Wait, I &lt;em&gt;do&lt;/em&gt; do this post every week! It&apos;s called &lt;em&gt;This Week in Spring&lt;/em&gt;, and in it I recap a lot of interesting new bits of content on the internet that elaborate or introduce or innovate. I love those points of data. They help. But they&apos;re almost never a full-guided course. Now, obviously, there are lots of good training efforts out there, but I think you&apos;re going to like this one: the  &lt;a href=&quot;https://spring.academy&quot;&gt;&lt;em&gt;The Spring Academy&lt;/em&gt;&lt;/a&gt;. I mention this because I&apos;ve got COVID, so I&apos;m quarantining, at home, and always eager for fun stuff to watch. I just finished &lt;em&gt;The Wire&lt;/em&gt;, and I&apos;m rewatching &lt;a href=&quot;https://spring.academy&quot;&gt;&lt;em&gt;The Spring Academy&lt;/em&gt;&lt;/a&gt; content. And you can too.&lt;/p&gt;
&lt;p&gt;Oh, and did I mention it&apos;s free? And no quarantine required to learn, either!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[The 2022 State of Spring Survey Report]]></title><link>https://spring.io/blog/2023/02/03/the-state-of-spring-survey-2022-report</link><guid isPermaLink="true">https://spring.io/blog/2023/02/03/the-state-of-spring-survey-2022-report</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Fri, 03 Feb 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! You&apos;re awesome! I know you&apos;re awesome. You know you&apos;re awesome. And the Spring team works for you. We like working for you because you dream awesome dreams and build awesome things. And we can&apos;t work effectively with and for you if we don&apos;t know where everyone stands.&lt;/p&gt;
&lt;p&gt;Every year we put out the &lt;a href=&quot;https://tanzu.vmware.com/content/ebooks/the-state-of-spring-2022&quot;&gt;&lt;em&gt;State of Spring&lt;/em&gt;&lt;/a&gt; survey, with respondents hailing from around the world and from organizations of every size and stripe. This year&apos;s results are even more interesting and exciting than the last! (You might even say they&apos;re &lt;em&gt;awesome&lt;/em&gt;.)&lt;/p&gt;
&lt;p&gt;The report has four sections:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;modern architecture in full flower&lt;/li&gt;
&lt;li&gt;new tech gaining ground&lt;/li&gt;
&lt;li&gt;upgrade and flourish&lt;/li&gt;
&lt;li&gt;and &quot;Spring&quot;-ing up to speed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The report breaks down so many interesting questions, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;what architectures are people using Spring with&lt;/li&gt;
&lt;li&gt;are people happy with Spring? And why or why not? (The answer surprised us! We were hoping for a warmer recept...  &lt;em&gt;Hah&lt;/em&gt; ! I&apos;m just kidding! Of course, people love Spring! But do read on for the details...)&lt;/li&gt;
&lt;li&gt;what style of APIs are people building?&lt;/li&gt;
&lt;li&gt;what are the most popular Spring modules?&lt;/li&gt;
&lt;li&gt;what is the community&apos;s sense of white-hot popular, new opportunities like Project Loom, GraalVM, and Kotlin?&lt;/li&gt;
&lt;li&gt;how do people learn Spring?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The report addresses myriad other questions, too. I won&apos;t spoil it for you.&lt;/p&gt;
&lt;p&gt;That&apos;s not true. I&apos;m totally going to spoil one thing: there are many well-known ways to learn Spring, but one of the most promising new approaches is the &lt;a href=&quot;https://spring.academy/&quot;&gt;new Spring Academy&lt;/a&gt;, which I hope you&apos;ll check out.&lt;/p&gt;
&lt;p&gt;So, &lt;a href=&quot;https://tanzu.vmware.com/content/ebooks/the-state-of-spring-2022&quot;&gt;&lt;em&gt;here&apos;s the report&lt;/em&gt;&lt;/a&gt;. And, once you&apos;ve read that, you might be interested &lt;a href=&quot;https://tanzu.vmware.com/content/blog/state-of-spring-2023-team-analysis&quot;&gt;in some extra analysis of the report&lt;/a&gt; by various members of the Spring team, including &lt;em&gt;yours truly&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Finally: &lt;em&gt;thank you&lt;/em&gt;, Spring fans!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[A Bootiful Podcast: Moderne founder Jon Schneider on OpenRewrite, modernizing code bases en masse, freedom and responsibility, and more]]></title><link>https://spring.io/blog/2023/02/02/a-bootiful-podcast-moderne-founder-jon-schneider-on-openrewrite-modernizing</link><guid isPermaLink="true">https://spring.io/blog/2023/02/02/a-bootiful-podcast-moderne-founder-jon-schneider-on-openrewrite-modernizing</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Thu, 02 Feb 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! In this installment,&lt;a href=&quot;https://twitter.com/starbuxman&quot;&gt; Josh Long (@starbuxman)&lt;/a&gt; talks to &lt;a href=&quot;https://twitter.com/moderneinc&quot;&gt;Moderne (@moderneinc)&lt;/a&gt; founder &lt;a href=&quot;https://twitter.com/jon_k_schneider&quot;&gt;Jon Schneider  (@jon_k_schneider) &lt;/a&gt; on &lt;a href=&quot;https://github.com/openrewrite&quot;&gt;OpenRewrite&lt;/a&gt;, modernizing code bases &lt;em&gt;en masse&lt;/em&gt;, freedom and responsibility, and more&lt;/p&gt;
&lt;iframe title=&quot;Moderne founder Jon Schneider on OpenRewrite, continuously modernizing code bases, freedom and responsibility, and more&quot; allowtransparency=&quot;true&quot; height=&quot;150&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=3pgyp-137e2c1-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[Spring Tools 4.17.2 released]]></title><link>https://spring.io/blog/2023/02/01/spring-tools-4-17-2-released</link><guid isPermaLink="true">https://spring.io/blog/2023/02/01/spring-tools-4-17-2-released</guid><dc:creator><![CDATA[Martin Lippert]]></dc:creator><pubDate>Wed, 01 Feb 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;p&gt;I am happy to announce the 4.17.2 release of the Spring Tools 4 for Eclipse, Visual Studio Code, and Theia.&lt;/p&gt;
&lt;h4&gt;updates to the Spring Tools 4 for Eclipse distribution&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;early-access builds for upcoming Eclipse 2023-03 release available via update site&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;fixes and improvements&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: [symbols] do not auto-limit the result of the workspace symbol request (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/915&quot;&gt;#915&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: Unit test MavenProjectParser (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/918&quot;&gt;#918&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: Give user more information about what is &quot;java sources reconciling&quot; (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/920&quot;&gt;#920&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: [Java-17] Enable jdt.ls.commons.test tests to execute in the maven build (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/928&quot;&gt;#928&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: update generated parser for Java properties with latest ANTLR runtime version (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/946&quot;&gt;#946&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: Bad Escape exception showing up in log (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/950&quot;&gt;#950&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: various exceptions while reconciling (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/951&quot;&gt;#951&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: NPE from OpenRewrite Java Parser - Cannot read field &quot;info&quot; because &quot;env&quot; is null (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/952&quot;&gt;#952&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: Unknown property error shown in application.yml when using java records (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/955&quot;&gt;#955&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: [upgrading] running upgrade recipe for Spring Boot 3 causes exception (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/958&quot;&gt;#958&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(VSCode)&lt;/em&gt; fixed: Is it feasible to drop the activation event onLanguage:xml? (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/926&quot;&gt;#926&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(VSCode)&lt;/em&gt; fixed: Error: command &apos;sts.vscode-spring-boot.enableClasspathListening&apos; not found (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/939&quot;&gt;#939&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Eclipse)&lt;/em&gt; fixed: &quot;Not properly disposed SWT resource&quot; was caused Spring Starter Project (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/797&quot;&gt;#797&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Eclipse)&lt;/em&gt; fixed: BadLocationException shows up in error log view (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/937&quot;&gt;#937&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Eclipse)&lt;/em&gt; fixed: set focus on name field in starters wizard (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/943&quot;&gt;#943&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Eclipse)&lt;/em&gt; fixed: Could not resolve module: org.springframework.tooling.ls.eclipse.gotosymbol (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/962&quot;&gt;#962&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Concourse)&lt;/em&gt; fixed: Add instance_vars to Concourse schema (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/942&quot;&gt;#942&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Concourse)&lt;/em&gt; fixed: Add var_sources to Concourse schema (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/944&quot;&gt;#944&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;known issues&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt;: The newly introduced additional reconciling for Java source files which is used to show up additional validations and quick fixes can cause increased memory and CPU consumption. In case you stumble upon issues in this area, feel free to disable the reconciling via &lt;code&gt;Preferences -&gt; Extensions -&gt; Spring Boot Tools -&gt; Open Rewrite&lt;/code&gt; (in VSCode) or &lt;code&gt;Preferences -&gt; Language Servers -&gt; Spring Language Servers -&gt; Spring Boot Language Server -&gt; Open Rewrite&lt;/code&gt; (in Eclipse).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;(Eclipse)&lt;/em&gt;: Due to a bug in the Maven Integration for Eclipse, you might some across the problem that resource files are no longer copied into the target directories (&lt;a href=&quot;https://github.com/spring-projects/sts4/issues/929&quot;&gt;#929&lt;/a&gt;). Unfortunately there is no release of the Maven Integration for Eclipse available yet that contains a fix for the issue. You can workaround this my manually triggering a &lt;code&gt;Maven -&gt; package&lt;/code&gt; build from within Eclipse or by installing the latest snapshot of the Maven Integration for Eclipse (as described in the issue).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To download the distribution for Eclipse and find links to the marketplace entries for Visual Studio Code and Theia, please go visit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spring Tools 4: &lt;a href=&quot;https://spring.io/tools/&quot;&gt;https://spring.io/tools/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Detailed changes can be found here: &lt;a href=&quot;https://github.com/spring-projects/sts4/wiki/Changelog#2023-02-01-4172-release-incl-language-servers-version-1440&quot;&gt;https://github.com/spring-projects/sts4/wiki/Changelog#2023-02-01-4172-release-incl-language-servers-version-1440&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring Tools 4.18.0 is scheduled to be released in late March 2023.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - January 31st, 2023]]></title><link>https://spring.io/blog/2023/01/31/this-week-in-spring-january-31st-2023</link><guid isPermaLink="true">https://spring.io/blog/2023/01/31/this-week-in-spring-january-31st-2023</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Tue, 31 Jan 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! I&apos;m not going to spend too much time here in the preamble because a) today&apos;s both my birthday and my late father&apos;s birthday and b) I got the worst gift ever: COVID-19. Sigh. So, I&apos;m going back to bed. Without further ado, let&apos;s get into this week&apos;s roundup!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/01/26/a-bootiful-podcast-graalvm-advocate-alina-yurenko-on-a-bootiful-podcast&quot;&gt;A Bootiful Podcast: GraalVM advocate Alina Yurenko on a Bootiful Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/01/25/introducing-microservices-patterns-with-spring-integration&quot;&gt;Introducing Microservices Patterns with Spring Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://tanzu.vmware.com/content/blog/introducing-spring-academy&quot;&gt;New Spring Academy from Spring Experts Helps Unlock Developer Potential&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vladmihalcea.com/scaling-spring-yugabytedb-cluster/&quot;&gt;Scaling a Spring application with a YugabyteDB cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/01/26/spring-cloud-azure-5-0-is-now-generally-available&quot;&gt;Spring Cloud Azure 5.0 is now Generally Available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://amirmv2006.medium.com/spring-initializr-and-continuous-generation-3d9516865763&quot;&gt;Spring Initializr and Continuous Generation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2023/01/25/spring-shell-2-1-6-and-3-0-0-are-now-available&quot;&gt;Spring Shell 2.1.6 and 3.0.0 are now available&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-function/tree/main/spring-cloud-function-samples/function-sample-aws-native&quot;&gt;An awesome example of using Spring Cloud Function with AWS Lambda and Spring Boot 3 AOT GraalVM native images  &lt;/a&gt; - thanks to Oleg Zhurakousky for putting it together!&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://joshlong.com/jl/blogpost/5-essential-things-every-java-developer-should-have.html&quot;&gt;5 Essential Things Every Java Developer Should Have&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/725700203/0/baeldung~Communicating-With-Docker-Containers-on-the-Same-Machine&quot;&gt;Communicating With Docker Containers on the Same Machine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/725784044/0/baeldung~Comparing-a-String-to-an-Enum-Value-in-Java&quot;&gt;Comparing a String to an Enum Value in Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.java67.com/2023/01/difference-between-spring-vs-springboot.html?m=1#.Y86ggfaGKU0.twitter&quot;&gt;Difference between Spring vs SpringBoot Framework in Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/725789852/0/baeldung~HTTP-Interface-in-Spring&quot;&gt;HTTP Interface in Spring 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/725591285/0/baeldung~Ahead-of-Time-Optimizations-in-Spring&quot;&gt;Ahead of Time Optimizations in Spring 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashish-bania.medium.com/adding-aspects-to-spring-boot-project-d5890e489072&quot;&gt;Aspect Oriented Programming for Spring Boot project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://feeds.feedblitz.com/~/725788709/0/baeldung~Spring-Boot-Logback-and-Logj-Extensions&quot;&gt;Spring Boot Logback and Log4j2 Extensions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[A Bootiful Podcast: GraalVM advocate Alina Yurenko on a Bootiful Podcast]]></title><link>https://spring.io/blog/2023/01/26/a-bootiful-podcast-graalvm-advocate-alina-yurenko-on-a-bootiful-podcast</link><guid isPermaLink="true">https://spring.io/blog/2023/01/26/a-bootiful-podcast-graalvm-advocate-alina-yurenko-on-a-bootiful-podcast</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Thu, 26 Jan 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Liiiive from New York, it&apos;s a Bootiful Podcast! This week &lt;a href=&quot;https://twitter.com/starbuxman&quot;&gt;I (@starbuxman)&lt;/a&gt; talk to Developer Advocate for &lt;a href=&quot;https://www.graalvm.org/&quot;&gt;GraalVM&lt;/a&gt; at Oracle Labs, and legend, &lt;a href=&quot;https://twitter.com/alina_yurenko&quot;&gt;Alina Yurenko (@alina_yurenko)&lt;/a&gt;&lt;/p&gt;
&lt;iframe title=&quot;GraalVM advocate Alina Yurenko on a Bootiful Podcast&quot; allowtransparency=&quot;true&quot; height=&quot;150&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?i=xjd6p-1373f4d-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;logo_link=episode_page&amp;btn-skin=7&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[Spring Cloud Azure 5.0 is now Generally Available ]]></title><link>https://spring.io/blog/2023/01/26/spring-cloud-azure-5-0-is-now-generally-available</link><guid isPermaLink="true">https://spring.io/blog/2023/01/26/spring-cloud-azure-5-0-is-now-generally-available</guid><dc:creator><![CDATA[Josh Long]]></dc:creator><pubDate>Thu, 26 Jan 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;We&apos;re very pleased to announce that Spring Cloud Azure 5.0 is now generally available.&lt;/p&gt;
&lt;p&gt;This major release includes the following features, improvements, and documentation updates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compatible with Spring Boot 3 and Spring Cloud 2022.0.0&lt;/li&gt;
&lt;li&gt;Supports &lt;a href=&quot;https://learn.microsoft.com/azure/developer/intro/passwordless-overview&quot;&gt;Passwordless Connections&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updated &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring/&quot;&gt;Azure for Spring developers documentation&lt;/a&gt; to help Spring developers code, deploy and scale Spring applications on Azure&lt;/li&gt;
&lt;li&gt;Redesigned &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/&quot;&gt;Spring Cloud Azure documentation&lt;/a&gt; with improved scenarios&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;https://github.com/joshlong/blog-images/raw/master/spring-cloud-azure-5-ga/upgrades.jpg&quot;&gt;
&lt;p&gt;To try Spring Cloud Azure 5.0, simply add the following dependency BOM to your project:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;#x3C;dependencyManagement&gt;
  &amp;#x3C;dependencies&gt;
    &amp;#x3C;dependency&gt;
      &amp;#x3C;groupId&gt;com.azure.spring&amp;#x3C;/groupId&gt;
      &amp;#x3C;artifactId&gt;spring-cloud-azure-dependencies&amp;#x3C;/artifactId&gt;
      &amp;#x3C;version&gt;5.0.0&amp;#x3C;/version&gt;
      &amp;#x3C;type&gt;pom&amp;#x3C;/type&gt;
      &amp;#x3C;scope&gt;import&amp;#x3C;/scope&gt;
    &amp;#x3C;/dependency&gt;
  &amp;#x3C;/dependencies&gt;
&amp;#x3C;/dependencyManagement&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Spring Boot 3 and Spring Cloud 2022.0.0 integration&lt;/h2&gt;
&lt;p&gt;Spring Boot 3 and Spring Cloud 2022.0.0 bring many exciting features, requiring some significant changes to Spring Cloud Azure to fully leverage them.&lt;/p&gt;
&lt;h3&gt;Noteworthy changes in this version&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Deprecated API upgrades, &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java/pull/31543&quot;&gt;Azure/azure-sdk-for-java#31543&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;com.azure.spring.cloud.autoconfigure.aad.implementation.oauth2.AadOAuth2AuthenticatedPrincipal&lt;/code&gt; class removed
&lt;code&gt;com.azure.spring.cloud.autoconfigure.aad.implementation.webapi.AadOboOAuth2AuthorizedClientProvider&lt;/code&gt; class removed
&lt;code&gt;com.azure.spring.cloud.autoconfigure.aad.properties.AadAuthorizationGrantType&lt;/code&gt; class removed
&lt;code&gt;com.azure.spring.cloud.autoconfigure.aad.AadJwtBearerTokenAuthenticationConverter&lt;/code&gt; class removed
&lt;code&gt;AuthorizationGrantType.PASSWORD&lt;/code&gt; no longer supported
&lt;code&gt;com.nimbusds.jwt.proc.DefaultJWTClaimsVerifier#DefaultJWTClaimsVerifier(com.nimbusds.jwt.JWTClaimsSet, java.util.Set&amp;#x3C;java.lang.String&gt;)&lt;/code&gt; method replaces &lt;code&gt;com.nimbusds.jwt.proc.DefaultJWTClaimsVerifier#DefaultJWTClaimsVerifier()&lt;/code&gt;
&lt;code&gt;AbstractHttpConfigurer&lt;/code&gt; replaces &lt;code&gt;org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter&lt;/code&gt;
&lt;code&gt;spring-cloud-azure-trace-sleuth&lt;/code&gt; artifact removed&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spring Security 6 dependencies upgrades, &lt;a href=&quot;https://Azure/azure-sdk-for-java#31808&quot;&gt;Azure/azure-sdk-for-java#31808&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity&lt;/code&gt; annotation replaces &lt;code&gt;org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity&lt;/code&gt;
&lt;code&gt;org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken&lt;/code&gt; class replaces &lt;code&gt;org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Class package path updates and API polishing/refinement, including reducing the number of public APIs: &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#32552&quot;&gt;#32552&lt;/a&gt;, &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#32552&quot;&gt;#32582&lt;/a&gt;, &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#32597&quot;&gt;#32597&lt;/a&gt; , &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#32616&quot;&gt;#32616&lt;/a&gt;, &lt;a href=&quot;https://Azure/azure-sdk-for-java#32716&quot;&gt;#32716&lt;/a&gt; .&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following features are planned for future releases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GraalVM native image**&lt;/li&gt;
&lt;li&gt;Spring Data Cosmos DB&lt;/li&gt;
&lt;li&gt;App Configuration Config and Feature Management&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;** Currently available for beta testing, please visit &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java/tree/feature/spring-boot-3/sdk/spring/spring-cloud-azure-native-reachability&quot;&gt;Spring Cloud Azure Native Reachability client library for Java&lt;/a&gt; to give it a try.&lt;/p&gt;
&lt;p&gt;Stay tuned for updates!&lt;/p&gt;
&lt;h2&gt;Passwordless connections&lt;/h2&gt;
&lt;p&gt;Using username/password credentials to access one application from another significantly increases overall risk profile. An unauthorized user can gain access to the application using a connection string accidentally checked into source control, sent through an insecure email, pasted into the wrong chat, or otherwise illegitimately obtained. Updating your application to use passwordless connections provides dramatically improved security.&lt;/p&gt;
&lt;p&gt;Passwordless connections for Java applications to Azure databases and eventing services are generally available with Spring Cloud Azure 5.0, enabling you to access services securely without passing usernames and passwords over the wire.&lt;/p&gt;
&lt;img src=&quot;https://github.com/joshlong/blog-images/raw/master/spring-cloud-azure-5-ga/passwordless.png&quot;&gt;
&lt;p&gt;These Azure Services currently support passwordless connections:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Azure Service&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Quickstart&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Migration guide&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Azue Database for MySQL&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/configure-spring-data-jpa-with-azure-mysql?tabs=passwordless&amp;#x26;toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&quot;&gt;Spring Data JDBC&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-mysql?tabs=passwordless&amp;#x26;toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&quot;&gt;Spring Data JPA&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/migrate-mysql-to-passwordless-connection?toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&amp;#x26;tabs=sign-in-azure-cli%2Cjava%2Capp-service%2Capp-service-identity&quot;&gt;Delete passwords and migrate&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Azure Database for PostgreSQL&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/configure-spring-data-jpa-with-azure-postgresql?tabs=passwordless&amp;#x26;toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&quot;&gt;Spring Data JDBC&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-postgresql?tabs=passwordless&amp;#x26;toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&quot;&gt;Spring Data JPA&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/migrate-sql-database-to-passwordless-connection?toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&amp;#x26;tabs=java%2Capp-service%2Cassign-role-service-connector&quot;&gt;Delete passwords and migrate&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Azure SQL Database&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/deploy-passwordless-spring-database-app?tabs=sqlserver&amp;#x26;toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&quot;&gt;Spring Data JDBC&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/deploy-passwordless-spring-database-app?tabs=sqlserver&amp;#x26;toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&quot;&gt;Spring Data JPA&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/migrate-sql-database-to-passwordless-connection?toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&amp;#x26;tabs=java%2Capp-service%2Cassign-role-service-connector&quot;&gt;Delete passwords and migrate&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Event Hubs – Kafka&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/migrate-kafka-to-passwordless-connection?tabs=azure-portal%2Csign-in-azure-cli%2Cspring-cloud-stream-kafka%2Cservice-connector%2Cassign-role-azure-portal&quot;&gt;Spring Cloud Stream Binder for Kafka&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/migrate-kafka-to-passwordless-connection?tabs=azure-portal%2Csign-in-azure-cli%2Cspring-cloud-stream-kafka%2Cservice-connector%2Cassign-role-azure-portal&quot;&gt;Spring Kafka&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/migrate-kafka-to-passwordless-connection?toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&amp;#x26;tabs=azure-portal%2Csign-in-azure-cli%2Cjava-kafka%2Cservice-connector%2Cservice-connector-identity%2Cassign-role-service-connector&quot;&gt;Delete passwords and migrate&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Storage&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/azure/storage/blobs/storage-quickstart-blobs-java?toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&amp;#x26;tabs=powershell%2Cmanaged-identity%2Croles-azure-portal%2Csign-in-azure-cli&quot;&gt;Storage Blob&lt;/a&gt;, &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/storage/queues/storage-quickstart-queues-java?toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&amp;#x26;tabs=powershell%2Cpasswordless%2Croles-azure-portal%2Cenvironment-variable-windows%2Csign-in-azure-cli&quot;&gt;Storage Queues&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/azure/storage/common/migrate-azure-credentials?toc=%2Fazure%2Fdeveloper%2Fintro%2Ftoc.json&amp;#x26;bc=%2Fazure%2Fdeveloper%2Fintro%2Fbreadcrumb%2Ftoc.json&amp;#x26;tabs=roles-azure-portal%2Csign-in-azure-cli%2Cservice-connector%2Cservice-connector-identity%2Cassign-role-service-connector&quot;&gt;Delete passwords and migrate&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Our passwordless journey does not end here. Support for additional Azure services is planned and under development.&lt;/p&gt;
&lt;h2&gt;Spring Initializr&lt;/h2&gt;
&lt;p&gt;The Azure Support module in Spring Initializr now supports Spring Boot 3, so you can begin your Spring Cloud Azure 5.0 journey directly from the Spring Initializr.&lt;/p&gt;
&lt;img src=&quot;https://github.com/joshlong/blog-images/raw/master/spring-cloud-azure-5-ga/initializr.png&quot;&gt;
&lt;h2&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Good documentation is a key part of Spring Cloud Azure. We’ve created a new online resource, &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring/&quot;&gt;Azure for Spring developers&lt;/a&gt;, to help Spring developers code, deploy, and scale their Spring applications on Azure. Whether developers are familiar with Spring and unfamiliar with Azure Service or the other way around – or new to both! – they can come to this site to learn. Content will be expanded and updated continuously.&lt;/p&gt;
&lt;p&gt;In addition, we’ve redesigned the &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/developer/java/spring-framework/&quot;&gt;Spring Cloud Azure&lt;/a&gt; documentation to help developers more easily find what they need, combined with useful scenarios.&lt;/p&gt;
&lt;img src=&quot;https://github.com/joshlong/blog-images/raw/master/spring-cloud-azure-5-ga/docs.png&quot;&gt;
&lt;h2&gt;Other bug fixes and feature improvements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Support auto startup for the autoconfigured Service Bus Processor client by enabling new property &lt;code&gt;spring.cloud.azure.servicebus.processor.auto-startup&lt;/code&gt; &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#29997&quot;&gt;#29997&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Provide property &lt;code&gt;spring.cloud.azure.eventhubs.kafka.enabled&lt;/code&gt; to enable/disable Spring Cloud Azure OAuth2 support for Event Hubs for Kafka &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#30574&quot;&gt;#30574&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support connecting to Azure AD via proxy (NOTE: custom &lt;code&gt;RestTemplateCustomizer&lt;/code&gt; bean must be provided) &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#26493&quot;&gt;#26493&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Support spring-cloud-azure-stream-binder-eventhubs connection to Azure China eventhub &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#30936&quot;&gt;#30936&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Resolved issues in Spring Cloud Stream Azure Kafka with Managed Identity credential refresh &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#30719&quot;&gt;#30719&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Removed logged warnings for Kafka passwordless autoconfiguration &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#31182&quot;&gt;#31182&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Enabled the token authentication converter and Azure AD Resource Server configurer adapter to accept custom JWT granted authorities converter &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#28665&quot;&gt;#28665&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Deleted properties &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#32465&quot;&gt;#32465&lt;/a&gt;: &lt;code&gt;spring.jms.servicebus.username&lt;/code&gt;,&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;spring.jms.servicebus.password&lt;/code&gt;, &lt;code&gt;spring.jms.servicebus.remote-uri&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;JacksonHttpSessionOAuth2AuthorizedClientRepository.getAuthorizedClients&lt;/code&gt; now returns an unmodifiable &lt;code&gt;Map&lt;/code&gt; &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#31190&quot;&gt;#31190&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RestTemplate&lt;/code&gt; used to get access token now contains only the two required converters &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#31482&quot;&gt;#31482&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;RestOperations&lt;/code&gt; now properly configured when &lt;code&gt;jwkResolver&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#31218&quot;&gt;#31218&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fixed duplicated &lt;code&gt;scope&lt;/code&gt; parameter &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#31191&quot;&gt;#31191&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Updated &lt;code&gt;NimbusJwtDecoder&lt;/code&gt; to use &lt;code&gt;RestTemplateBuilder&lt;/code&gt; instead of &lt;code&gt;RestTemplate&lt;/code&gt; &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#31233&quot;&gt;#31233&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Resolved &lt;code&gt;NoClassDefFoundError&lt;/code&gt; for &lt;code&gt;JSONArray&lt;/code&gt; &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#31716&quot;&gt;#31716&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Resolve issues appending &lt;code&gt;spring.main.sources&lt;/code&gt; configuration from Spring Cloud Stream Kafka binder &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java#31715&quot;&gt;#31715&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Feedback&lt;/h2&gt;
&lt;p&gt;Feedback and contributions are always welcome. Please contact us on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/spring-cloud-azure&quot;&gt;StackOverflow&lt;/a&gt;  or &lt;a href=&quot;https://github.com/Azure/azure-sdk-for-java/issues?q=is%3Aissue%20is%3Aopen%20label%3Aazure-spring&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Resources&lt;/h2&gt;
&lt;p&gt;To learn more about Spring Cloud Azure, please visit the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://microsoft.github.io/spring-cloud-azure/current/reference/html/index.html&quot;&gt;Reference documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://aka.ms/spring/msdocs&quot;&gt;Conceptual documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://aka.ms/spring/samples&quot;&gt;Code samples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://aka.ms/spring/versions&quot;&gt;Spring versions mapping&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Spring Cloud 2022.0.1 (codename Kilburn) Has Been Released]]></title><link>https://spring.io/blog/2023/01/26/spring-cloud-2022-0-1-codename-kilburn-has-been-released</link><guid isPermaLink="true">https://spring.io/blog/2023/01/26/spring-cloud-2022-0-1-codename-kilburn-has-been-released</guid><dc:creator><![CDATA[Ryan Baxter]]></dc:creator><pubDate>Thu, 26 Jan 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the community, I am pleased to announce that the General Availability (RELEASE) of the &lt;a href=&quot;https://cloud.spring.io&quot;&gt;Spring Cloud 2022.0.1&lt;/a&gt; Release Train is available today. The release can be found in &lt;a href=&quot;https://repo1.maven.org/maven2/org/springframework/cloud/spring-cloud-dependencies/2022.0.1/&quot;&gt;Maven Central&lt;/a&gt;. You can check out the 2022.0.1 &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2022.0.1-Release-Notes&quot;&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Notable Changes in the 2022.0.1 Release Train&lt;/h2&gt;
&lt;p&gt;This release is compatible with Spring Boot 3.0.2.&lt;/p&gt;
&lt;h3&gt;Spring Cloud Function&lt;/h3&gt;
&lt;p&gt;Few minor &lt;a href=&quot;spring-cloud-function-context&quot;&gt;enhancements and bug fixes&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Spring Cloud Kubernetes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Implement A &lt;code&gt;CatalogWatch&lt;/code&gt; For Kubernetes Java Client ((1042)[&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-kubernetes/issues/1042&quot;&gt;https://github.com/spring-cloud/spring-cloud-kubernetes/issues/1042&lt;/a&gt;])&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Spring Cloud Stream&lt;/h3&gt;
&lt;p&gt;Number of &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-stream/milestone/85?closed=1&quot;&gt;enhancements and bug fixes&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Spring Cloud Commons&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Provided setter for &lt;code&gt;DefaultServiceInstance.secure&lt;/code&gt; (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-commons/pull/1089&quot;&gt;#1089&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Optimised selectors for weighted load-balancing to ensure that selection is always O(1) time (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-commons/pull/1184&quot;&gt;#1184&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Spring Cloud Gateway&lt;/h3&gt;
&lt;p&gt;A number of bugs were fixed, in particular&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fixed memory leak of CacheRequestBodyGatewayFilter (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/pull/2842&quot;&gt;#2842&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Kotlin Route DSL restored (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/issues/2813&quot;&gt;#2813&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following modules were updated as part of 2022.0.1:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Module&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Issues&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Function&lt;/td&gt;
&lt;td&gt;4.0.1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-function/milestone/45?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Task&lt;/td&gt;
&lt;td&gt;3.0.1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-task/milestone/70?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Kubernetes&lt;/td&gt;
&lt;td&gt;3.0.1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-kubernetes/milestone/56?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Openfeign&lt;/td&gt;
&lt;td&gt;4.0.1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Bus&lt;/td&gt;
&lt;td&gt;4.0.1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Stream&lt;/td&gt;
&lt;td&gt;4.0.1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-stream/milestone/85?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Commons&lt;/td&gt;
&lt;td&gt;4.0.1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-commons/milestone/111?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Contract&lt;/td&gt;
&lt;td&gt;4.0.1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-contract/milestone/98?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Netflix&lt;/td&gt;
&lt;td&gt;4.0.0&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-netflix/milestone/117?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Consul&lt;/td&gt;
&lt;td&gt;4.0.1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-consul/milestone/65?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Config&lt;/td&gt;
&lt;td&gt;4.0.1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Build&lt;/td&gt;
&lt;td&gt;4.0.1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Starter Build&lt;/td&gt;
&lt;td&gt;2022.0.1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Gateway&lt;/td&gt;
&lt;td&gt;4.0.1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/milestone/75?closed=1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As always, we welcome feedback on &lt;a href=&quot;https://github.com/spring-cloud/&quot;&gt;GitHub&lt;/a&gt;, on &lt;a href=&quot;https://gitter.im/spring-cloud/spring-cloud&quot;&gt;Gitter&lt;/a&gt;, on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/spring-cloud&quot;&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href=&quot;https://twitter.com/SpringCloud&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
&amp;#x3C;dependencyManagement&gt;
    &amp;#x3C;dependencies&gt;
        &amp;#x3C;dependency&gt;
            &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
            &amp;#x3C;artifactId&gt;spring-cloud-dependencies&amp;#x3C;/artifactId&gt;
            &amp;#x3C;version&gt;2022.0.1&amp;#x3C;/version&gt;
            &amp;#x3C;type&gt;pom&amp;#x3C;/type&gt;
            &amp;#x3C;scope&gt;import&amp;#x3C;/scope&gt;
        &amp;#x3C;/dependency&gt;
    &amp;#x3C;/dependencies&gt;
&amp;#x3C;/dependencyManagement&gt;
&amp;#x3C;dependencies&gt;
    &amp;#x3C;dependency&gt;
        &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
        &amp;#x3C;artifactId&gt;spring-cloud-starter-config&amp;#x3C;/artifactId&gt;
    &amp;#x3C;/dependency&gt;
    &amp;#x3C;dependency&gt;
        &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
        &amp;#x3C;artifactId&gt;spring-cloud-starter-netflix-eureka-client&amp;#x3C;/artifactId&gt;
    &amp;#x3C;/dependency&gt;
    ...
&amp;#x3C;/dependencies&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;buildscript {
dependencies {
classpath &quot;io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE&quot;
}
}

apply plugin: &quot;io.spring.dependency-management&quot;

dependencyManagement {
imports {
mavenBom &apos;org.springframework.cloud:spring-cloud-dependencies:2022.0.1&apos;
}
}

dependencies {
compile &apos;org.springframework.cloud:spring-cloud-starter-config&apos;
compile &apos;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&apos;
...
}
&lt;/code&gt;&lt;/pre&gt;</content:encoded></item><item><title><![CDATA[Introducing Microservices Patterns with Spring Integration]]></title><link>https://spring.io/blog/2023/01/25/introducing-microservices-patterns-with-spring-integration</link><guid isPermaLink="true">https://spring.io/blog/2023/01/25/introducing-microservices-patterns-with-spring-integration</guid><dc:creator><![CDATA[Artem Bilan]]></dc:creator><pubDate>Wed, 25 Jan 2023 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hey Spring Community!&lt;/p&gt;
&lt;p&gt;I hope you are enjoying &lt;a href=&quot;https://springone.io/&quot;&gt;Spring One Essentials&lt;/a&gt; these days. The most exciting feature for me is an &lt;a href=&quot;https://springone.io/sessions/observability-of-your-application&quot;&gt;Observability&lt;/a&gt; which is spread throughout the Spring portfolio from now on. Nevertheless, today I’d like to share with a project I’m working on since holidays, where the mentioned observability makes a perfect sense, too.&lt;/p&gt;
&lt;p&gt;I’ll start from the far. Let’s imagine we are learning a new programming language! I do learn &lt;a href=&quot;https://go.dev/tour/welcome/1&quot;&gt;Go&lt;/a&gt; to better understand Kubernetes, for example. Of course, we deal with some primitives and basic structures, first of all. Then we implement some well-known algorithms like bubble sort, Fibonacci number or sqrt function to get used to the language style and expectations. And now what? We have some real use-cases where this or that functionality can be covered by some patterns. So, we go and learn those patterns(or we know them already) and trying to implement them ourselves to meet our project requirements. But mostly (like me) we search for already existing solutions for the frameworks and tools we are using all the time to minimize our own code base and maintenance burden. Plus such a catalog (or library) of ready to use pattern implementations helps developers to communicate each other in the same concise language.&lt;/p&gt;
&lt;p&gt;Now to the ground. The tool and framework for me which I use and develop on daily basis, of course, is &lt;a href=&quot;https://spring.io/projects/spring-integration&quot;&gt;Spring Integration&lt;/a&gt; which is already a reference implementation of well-know &lt;a href=&quot;https://www.enterpriseintegrationpatterns.com&quot;&gt;Enterprise Integration Patterns&lt;/a&gt;. At the same time a messaging model as a core feature of this project allows to implement easily scaled loosely-coupled architecture not only between services, but even within one application context. In addition, it comes with many ready-to-use components and utilities, such as retry advice, SpEL evaluation and scripting languages support. Or distributed locks and leader election. Of course, I can go on and go on talking about various channel adapters, DSLs or even Reactive Streams support. But the goal of this blog post is to share with you something which would make your experience with modern cloud and microservices applications development easier when you are already familiar with Spring Integration.&lt;/p&gt;
&lt;p&gt;So, please, meet a &lt;a href=&quot;https://github.com/artembilan/microservices-patterns-spring-integration&quot;&gt;Microservices Patterns with Spring Integration&lt;/a&gt; project which, essentially, is a set (catalog) of working samples for Microservices Patterns described on &lt;a href=&quot;https://microservices.io/index.html&quot;&gt;Microservice Architecture&lt;/a&gt;. In addition, since Spring Integration is fully based on messaging, which can be distributed, we also include some &lt;a href=&quot;https://iwringer.wordpress.com/2015/08/03/patterns-for-streaming-realtime-analytics&quot;&gt;Event Streaming Patterns&lt;/a&gt; implementations. Every module of this project is a self-containing Spring Boot application, which in most cases should be verified through provided tests because some features may require a real environment. The solutions presented in this project cannot be moved as out-of-the-box components to any framework(Spring Integration, Spring Cloud Stream etc.) because they require some code adjustments according to the target project you develop. For example the current &lt;code&gt;Normalizer&lt;/code&gt; pattern has only HTTP and directory poller as entry points, and can convert from limited number of types; the &lt;code&gt;Outbox&lt;/code&gt; pattern deals with JDBC and Apache Kafka, and so on.&lt;/p&gt;
&lt;p&gt;The project is on its early stage, and I’m going to come back to it when I read &lt;a href=&quot;https://microservices.io/book&quot;&gt;Microservices patterns&lt;/a&gt; and &lt;a href=&quot;https://www.oreilly.com/library/view/streaming-systems/9781491983867/&quot;&gt;Streaming Systems&lt;/a&gt; books. Please, reach us out with any feedback and if you have some use-case (&lt;a href=&quot;https://vldb.org/pvldb/vol14/p3135-begoli.pdf&quot;&gt;Watermarks?&lt;/a&gt;) which fits to Microservices or Streaming Systems architecture, don’t hesitate to share your thoughts and possible solution with Spring Integration! And right: the next pattern I’m looking at to add is a &lt;a href=&quot;https://microservices.io/patterns/observability/distributed-tracing.html&quot;&gt;Distributed Tracing&lt;/a&gt; based on a &lt;a href=&quot;https://micrometer.io/docs/observation&quot;&gt;Micrometer Observation&lt;/a&gt; mentioned before.&lt;/p&gt;
&lt;p&gt;Cheers, &lt;br&gt;
Artem&lt;/p&gt;</content:encoded></item></channel></rss>